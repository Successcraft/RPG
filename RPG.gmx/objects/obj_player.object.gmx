<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the player
// Set fixed rotation
phy_fixed_rotation = true;
//defining basic vars
pspd = 3;
hspd = 0;
vspd = 0;
xaxis = 0;
yaxis = 0;
len = 0;
pcurrenth = 24;
pmaxh = 24;

scr_get_input();
state = scr_move_state;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player movement
script_execute(state);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI
//Heart GUI
var i;
var h = false;
var j = 1;
for(i=pmaxh/2;i&gt;0;i -= 1){ 
  if(i&gt;6){                                                       // Pr√ºft auf 2. Leiste
   if(i&gt;ceil(pcurrenth/2)){                                      //leere herzen         
        draw_sprite(spr_heartsheet, 2, 100*i-550, 150);          
   }else{                                                        //halbe herzen
        if(pcurrenth % 2 =! 0 and h == false){
        draw_sprite(spr_heartsheet, 1, 100*i-550, 150);
        h = true;
   }
   else{                                                         //ganze herzen
        draw_sprite(spr_heartsheet, 0, 100*i-550, 150);
       }
        }
         j++;
     }else{
     if(i&gt;ceil(pcurrenth/2)){                                    //leere herzen   
        draw_sprite(spr_heartsheet, 2, 100*i+50, 50); 
   }else{                                                        //halbe herzen
        if(pcurrenth % 2 =! 0 and h == false){
        draw_sprite(spr_heartsheet, 1, 100*i+50, 50);
        h = true;
   }
   else{                                                         //ganze herzen
        draw_sprite(spr_heartsheet, 0, 100*i+50, 50);
       }
        }
       
     }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>0,32</point>
    <point>0,0</point>
    <point>32,0</point>
  </PhysicsShapePoints>
</object>
